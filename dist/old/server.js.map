{"version":3,"sources":["../../old/server.js"],"names":["net","require","server","createServer","conn","_hashtable","Date","console","log","on","close","process","exit","data","foundEl","message","forEach","obj","date","push","JSON","parse","response","write","stringify","listen"],"mappings":";;AAAA,IAAMA,MAAMC,QAAQ,KAAR,CAAZ;;AAEA;AACA,IAAIC,SAASF,IAAIG,YAAJ,CAAiB,UAAUC,IAAV,EAAgB;AAC1C,QAAIC,aAAa,CACb,CAAC,OAAD,EAAU,EAAC,SAAS,GAAV,EAAe,QAAQ,IAAIC,IAAJ,EAAvB,EAAV,CADa,EAEb,CAAC,QAAD,EAAW,EAAC,SAAS,IAAV,EAAgB,QAAQ,IAAIA,IAAJ,EAAxB,EAAX,CAFa,EAGb,CAAC,QAAD,EAAW,EAAC,SAAS,GAAV,EAAe,QAAQ,IAAIA,IAAJ,EAAvB,EAAX,CAHa,CAAjB;AAKAC,YAAQC,GAAR,CAAY,0BAAZ;;AAEA;AACAJ,SAAKK,EAAL,CAAQ,KAAR,EAAe,YAAY;AACvBF,gBAAQC,GAAR,CAAY,6BAAZ;AACA;AACAN,eAAOQ,KAAP;AACA;AACAC,gBAAQC,IAAR,CAAa,CAAb;AACH,KAND;;AAQA;AACAR,SAAKK,EAAL,CAAQ,KAAR,EAAe,UAAUI,IAAV,EAAgB;AAC3B,YAAIC,UAAU,KAAd;AACA,YAAIC,UAAU,cAAd;AACAV,mBAAWW,OAAX,CAAmB,UAAUC,GAAV,EAAe;AAC9B,gBAAIA,IAAI,CAAJ,KAAUJ,KAAK,CAAL,CAAd,EAAuB;AACnBI,sBAAMJ,IAAN;AACAI,oBAAI,CAAJ,EAAOC,IAAP,GAAc,IAAIZ,IAAJ,EAAd;AACAQ,0BAAU,IAAV;AACAC,0BAAU,SAAV;AACH;AACJ,SAPD;AAQA,YAAI,CAACD,OAAL,EAAc;AACVT,uBAAWc,IAAX,CAAgBN,IAAhB;AACAE,sBAAU,SAAV;AACH;AACDF,eAAOO,KAAKC,KAAL,CAAWR,IAAX,CAAP;AACAN,gBAAQC,GAAR,CAAY,0BAAZ,EAAwCK,KAAKS,QAA7C;AACH,KAjBD;;AAmBA;AACAlB,SAAKmB,KAAL,CACIH,KAAKI,SAAL,CACI,EAACF,UAAU,mBAAX,EADJ,CADJ;AAKH,CA3CY,CAAb;;AA6CA;AACApB,OAAOuB,MAAP,CAAc,KAAd,EAAqB,WAArB,EAAkC,YAAY;AAC1ClB,YAAQC,GAAR,CAAY,mBAAZ;AACH,CAFD","file":"server.js","sourcesContent":["const net = require(\"net\");\n\n// Create a simple server\nvar server = net.createServer(function (conn) {\n    var _hashtable = [\n        ['teste', {'valor': 151, 'date': new Date()}],\n        ['teste2', {'valor': 1513, 'date': new Date()}],\n        ['teste3', {'valor': 151, 'date': new Date()}],\n    ];\n    console.log(\"Server: Client connected\");\n\n    // If connection is closed\n    conn.on(\"end\", function () {\n        console.log('Server: Client disconnected');\n        // Close the server\n        server.close();\n        // End the process\n        process.exit(0);\n    });\n\n    // Handle data from client\n    conn.on(\"put\", function (data) {\n        var foundEl = false;\n        var message = \"Element was \";\n        _hashtable.forEach(function (obj) {\n            if (obj[0] == data[0]) {\n                obj = data;\n                obj[1].date = new Date();\n                foundEl = true;\n                message = \"updated\";\n            }\n        });\n        if (!foundEl) {\n            _hashtable.push(data);\n            message = \"created\";\n        }\n        data = JSON.parse(data);\n        console.log(\"Response from client: %s\", data.response);\n    });\n\n    // Let's response with a hello message\n    conn.write(\n        JSON.stringify(\n            {response: \"Hey there client!\"}\n        )\n    );\n});\n\n// Listen for connections\nserver.listen(61337, \"localhost\", function () {\n    console.log(\"Server: Listening\");\n});\n"]}